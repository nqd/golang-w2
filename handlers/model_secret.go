/*
 * Secret Server
 *
 * This is an API of a secret service. You can save your secret by using the API. You can restrict the access of a secret after the certen number of views or after a certen period of time.
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package handlers

import (
	"log"
	"time"
)

type Secret struct {

	// Unique hash to identify the secrets
	Hash string `json:"hash,omitempty" db:"hash"`

	// The secret itself
	SecretText string `json:"secretText,omitempty" db:"secret_text"`

	// The date and time of the creation
	CreatedAt time.Time `json:"createdAt,omitempty" db:"created_at"`

	// The secret cannot be reached after this time
	ExpiresAt time.Time `json:"expiresAt,omitempty" db:"expires_at"`

	// How many times the secret can be viewed
	RemainingViews int32 `json:"remainingViews,omitempty" db:"remaining_views"`
}

func (s *Secret) Create() {
	tx := db.MustBegin()
	res, err := tx.NamedExec("INSERT INTO secret(hash, secret_text, created_at, expires_at, remaining_views) VALUES (:hash, :secret_text, :created_at, :expires_at, :remaining_views)", s)
	if err != nil {
		log.Println(err)
		return
	}
	log.Printf("exec result %+v\n", res)
	err = tx.Commit()
	if err != nil {
		log.Println(err)
		return
	}
}
